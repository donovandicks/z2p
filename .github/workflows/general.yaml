name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432

    env:
      SQLX_VERSION: 0.5
      SQLX_FEATURES: postgres

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Cache Dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Stable Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache Sqlx-CLI
        uses: actions/cache@v2
        id: cache-sqlx
        with:
          path: |
            ~/.cargo/bin/sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}-${{ env.SQLX_FEATURES }}

      - name: Install Sqlx-CLI
        uses: actions-rs/cargo@v1
        if: steps.cache-sqlx.outputs.cache-hit != true
        with:
          command: install
          args: >
            sqlx-cli
            --force
            --version=${{ env.SQLX_VERSION }}
            --features=${{ env.SQLX_FEATURES }}
            --no-default-features
            --locked

      - name: Migrate Database
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Run Tests
        uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Stable Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt

      - name: Check Code for Formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432

    env:
      SQLX_VERSION: 0.5
      SQLX_FEATURES: postgres

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Stable Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy

      - name: Cache Sqlx-CLI
        uses: actions/cache@v2
        id: cache-sqlx
        with:
          path: |
            ~/.cargo/bin/sqlx
          key: ${{ runner.os }}-sqlx-${{ env.SQLX_VERSION }}-${{ env.SQLX_FEATURES }}

      - name: Install Sqlx-CLI
        uses: actions-rs/cargo@v1
        if: steps.cache-sqlx.outputs.cache-hit != true
        with:
          command: install
          args: >
            sqlx-cli
            --force
            --version=${{ env.SQLX_VERSION }}
            --features=${{ env.SQLX_FEATURES }}
            --no-default-features
            --locked

      - name: Migrate Database
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Lint with Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings
